name: Tests #and Build Docker Images

on:
  push:
    branches:
      - 'dev'
      # - 'aws'

  pull_request:
    branches:
      - 'dev'
      # - 'aws'

jobs:
  test:
    strategy:
      matrix:
        service: [account_management, product_catalog, purchase_service, shopping_cart]
    runs-on: ubuntu-latest
    steps:

      - name: Set timezone
        uses: szenius/set-timezone@v2.0
        with:
          timezoneLinux: "Europe/Rome"
          timezoneMacos: "Europe/Rome"
          timezoneWindows: "Europe/Rome"

      - name: Update 
        run: sudo apt-get update

      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Create virtualenv
        run: |
          python -m venv venv
          source venv/bin/activate
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest pytest-cov pytest-mock pytest-md pytest-emoji
          cd docker/${{ matrix.service }}
          pip install --ignore-installed -r requirements.txt
      
      - name: Run pytest
        uses: pavelzw/pytest-action@v2.2.0
        with:
          verbose: true
          emoji: true
          job-summary: true
          custom-arguments: 'docker/${{ matrix.service }}/tests/test_routes.py'
          click-to-expand: true
          report-title: '${{ matrix.service }} Test Report'

# GitHub Actions to build and push Docker images ---------------------------------------------------          
  # build-docker-images:
  #   needs: test
  #   strategy:
  #     matrix:
  #       service: [account_management, product_catalog, purchase_service, shopping_cart, react_app, payment_service]
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Set timezone
  #       uses: szenius/set-timezone@v2.0
  #       with:
  #         timezoneLinux: "Europe/Rome"
  #         timezoneMacos: "Europe/Rome"
  #         timezoneWindows: "Europe/Rome"

  #     - name: Update 
  #       run: sudo apt-get update

  #     - name: Checkout
  #       uses: actions/checkout@v4
  #       with:
  #         fetch-depth: 0
      
  #     - name: Configure AWS Credentials
  #       uses: aws-actions/configure-aws-credentials@v4
  #       with:
  #         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #         aws-region: eu-south-1

  #     - name: Login into AWS ECR
  #       id: login-ecr
  #       uses: aws-actions/amazon-ecr-login@v2.0.1

  #     - name: Build and push Docker images
  #       env:
  #         REGISTRY: ${{ steps.login-ecr.outputs.registry }}
  #         REPOSITORY: ${{ matrix.service }}
  #         IMAGE_TAG: ${{ github.sha }}

  #       run: |
  #         docker build -t $REGISTRY/$REPOSITORY ./docker/$REPOSITORY
  #         docker tag $IMAGE_TAG $REGISTRY/$REPOSITORY
  #         docker push $REGISTRY/$REPOSITORY
  #         docker tag latest $REGISTRY/$REPOSITORY
  #         docker push $REGISTRY/$REPOSITORY

# GitHub Actions to sync up to CodeCommit ---------------------------------------------------
  # git-to-codecommit:
  #   needs: test
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v4
  #       with:
  #         fetch-depth: 0

  #     - name: Configure AWS Credentials
  #       uses: aws-actions/configure-aws-credentials@v4
  #       with:
  #         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #         aws-region: eu-south-1

  #     - name: Sync up to CodeCommit
  #       uses: youyo/sync-up-to-codecommit-action@v1.0.6
  #       with:
  #         repository_name: ebook-store-repository
  #         aws_region: eu-south-1
